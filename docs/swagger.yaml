definitions:
  handlers.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.registerRequest:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  models.Intake:
    properties:
      DateTime:
        type: string
      id:
        type: string
      pvzId:
        type: string
      status:
        type: string
    type: object
  models.PVZ:
    properties:
      city:
        type: string
      id:
        type: string
      registrationDate:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /dummyLogin:
    post:
      consumes:
      - application/json
      description: Получение тестового токена для разработки
      parameters:
      - description: User role data
        in: body
        name: request
        required: true
        schema:
          type: object
      - description: User role
        in: body
        name: role
        required: true
        schema:
          enum:
          - employee
          - moderator
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение тестового токена
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя и получение JWT токена
      parameters:
      - description: User login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Авторизация пользователя
      tags:
      - auth
  /pvz:
    post:
      consumes:
      - application/json
      description: Создание нового пункта выдачи заказов (только для модераторов)
      parameters:
      - description: PVZ data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PVZ'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PVZ'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - bearerAuth: []
      summary: Создание ПВЗ
      tags:
      - pvz
  /pvz/{id}:
    get:
      consumes:
      - application/json
      description: Получение информации о пункте выдачи заказов по его ID
      parameters:
      - description: PVZ ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PVZ'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - bearerAuth: []
      summary: Получение ПВЗ по ID
      tags:
      - pvz
  /receptions:
    post:
      consumes:
      - application/json
      description: Создание новой приемки товаров (только для сотрудников ПВЗ)
      parameters:
      - description: Intake data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Intake'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Intake'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - bearerAuth: []
      summary: Создание новой приемки товаров
      tags:
      - intake
  /register:
    post:
      consumes:
      - application/json
      description: Создание нового пользователя с email, паролем и ролью
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - auth
swagger: "2.0"
